pipeline
{agent any
stages
{
stage('scm checkout')
{
   steps { git branch: 'master', url: 'https://github.com/Prathamesh2809/mavenproject.git' }}


stage('compile the job')    
{
   steps { withMaven(globalMavenSettingsConfig: '', jdk: 'JDK_HOME', maven: 'MAVEN_HOME', mavenSettingsConfig: '', traceability: true) {
   sh 'mvn compile'    
} }} 

stage('execute a unit test framework')    
{
   steps { withMaven(globalMavenSettingsConfig: '', jdk: 'JDK_HOME', maven: 'MAVEN_HOME', mavenSettingsConfig: '', traceability: true) {
   sh 'mvn test'    
} }}

stage('Build the code')    
{
   steps { withMaven(globalMavenSettingsConfig: '', jdk: 'JDK_HOME', maven: 'MAVEN_HOME', mavenSettingsConfig: '', traceability: true) {
   sh 'mvn clean -B -DskipTests package'    
} }}

 stage('build docker image')
 {steps { sh 'docker build -t 010928188483.dkr.ecr.ap-southeast-1.amazonaws.com/prod/myapp:latest .' }}

 stage('push docker image to dockerhub')
 {steps{ 
    withDockerRegistry(credentialsId: 'ecr:ap-southeast-1:AWS-cred', url: 'https://010928188483.dkr.ecr.ap-southeast-1.amazonaws.com/prod/myapp') {
    sh 'docker push 010928188483.dkr.ecr.ap-southeast-1.amazonaws.com/prod/myapp:latest'
}
  }}

stage('deploy to k8s')
{steps{  withKubeConfig(caCertificate: '', clusterName: '', contextName: 'arn:aws:eks:ap-southeast-1:010928188483:cluster/my-cluster', credentialsId: 'ecr:ap-southeast-1:AWS-cred', namespace: '', restrictKubeConfigAccess: false, serverUrl: '') {
    sh 'kubectl apply -f manifest.yaml'
} }}

}
}

